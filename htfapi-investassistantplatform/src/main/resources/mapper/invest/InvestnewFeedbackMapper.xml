<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.htf.bigdata.invest.platform.dao.invest.IInvestnewFeedbackDao">
  <resultMap id="BaseResultMap" type="com.htf.bigdata.invest.platform.model.invest.InvestnewFeedbackModel">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="contact_info" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="contacts" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="finish_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.htf.bigdata.invest.platform.model.invest.InvestnewFeedbackModel">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="contact_info" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="contacts" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="finish_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, title, contact_info, contacts, finish_time, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from investnew_feedback
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from investnew_feedback
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.htf.bigdata.invest.platform.model.invest.InvestnewFeedbackModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into investnew_feedback (user_id, title, contact_info, 
      contacts, finish_time, create_time, 
      update_time, content)
    values (#{user_id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{contact_info,jdbcType=VARCHAR}, 
      #{contacts,jdbcType=VARCHAR}, #{finish_time,jdbcType=TIMESTAMP}, #{create_time,jdbcType=TIMESTAMP}, 
      #{update_time,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.htf.bigdata.invest.platform.model.invest.InvestnewFeedbackModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into investnew_feedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        user_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="contact_info != null">
        contact_info,
      </if>
      <if test="contacts != null">
        contacts,
      </if>
      <if test="finish_time != null">
        finish_time,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="contact_info != null">
        #{contact_info,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="finish_time != null">
        #{finish_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.htf.bigdata.invest.platform.model.invest.InvestnewFeedbackModel">
    update investnew_feedback
    <set>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="contact_info != null">
        contact_info = #{contact_info,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="finish_time != null">
        finish_time = #{finish_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.htf.bigdata.invest.platform.model.invest.InvestnewFeedbackModel">
    update investnew_feedback
    set user_id = #{user_id,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      contact_info = #{contact_info,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      finish_time = #{finish_time,jdbcType=TIMESTAMP},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.htf.bigdata.invest.platform.model.invest.InvestnewFeedbackModel">
    update investnew_feedback
    set user_id = #{user_id,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      contact_info = #{contact_info,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      finish_time = #{finish_time,jdbcType=TIMESTAMP},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getList" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from investnew_feedback
    order by create_time desc
    limit #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
  </select>
  <select id="count" resultType="java.lang.Integer">
    select count(*) from investnew_feedback
  </select>
</mapper>